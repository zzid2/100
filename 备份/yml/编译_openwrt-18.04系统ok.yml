#
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#
#-----------------------------------------------------------------------------------------------------------------
#‚Üê‚Üë‚Üí‚Üì‚Üñ‚Üô‚Üó‚Üò‚ÜïÁÆ≠Â§¥Á¨¶Âè∑

name: ÁºñËØëOpenWRTÂõ∫‰ª∂ #üëàÂ∑•‰ΩúÊµÅÂêçÁß∞
on:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSHËøúÁ®ã'
        required: false
        default: 'true-false' # true=ÂºÄÂêØ false=ÂÖ≥Èó≠
      wxtz:
        description: 'ÂæÆ‰ø°ÈÄöÁü•'
        required: false
        default: 'wxtz'  # wxtz=ÂºÄÂêØ false=ÂÖ≥Èó≠
      release:
        description: 'ÂèëÂ∏ÉÂõ∫‰ª∂'
        required: false
        default: 'release'  # release=ÂºÄÂêØ actions=ÂÖ≥Èó≠

#ÂÆöÊó∂Ëß¶ÂèëÂºÄÂßãÁºñËØë(Êó∂Èó¥ËÆæÁΩÆËØ∑ÁúãÂÆöÊó∂ÁºñËØëËØ¥Êòé)
#  schedule:
#    - cron: 0 8 */5 * *

#ÁÇπ‚òÜStarËß¶ÂèëÂºÄÂßãÁºñËØë
#  watch:
#    types: started

env:
#-----------------------------------------------------------------------------------------------------------------
# # ÂçïÊú∫Âûã_ÂêÑÈ°πÈÖçÁΩÆÂºÄÂÖ≥
  # FIRMWARE_NAME: OpenWRT_x86                                      #ÂæÆ‰ø°Êé®ÈÄÅÂèòÈáèÂêçÔºàÂõ∫‰ª∂ÂêçÁß∞‰∏çËÉΩÂê´‰∏≠ÊñáÔºâ
  # GITHUB_RELEASE: https://github.com/zuoweiid/13.1/releases       #GitHubÂèëÂ∏ÉÂú∞ÂùÄÔºå‰øÆÊîπÊàêËá™Â∑±ÁöÑ
  # REPO_URL: https://github.com/coolsnowwolf/lede                  #OpenWRTÊ∫êÁ†ÅÂú∞ÂùÄ
  # REPO_BRANCH: master             #‚ÜêÊ∫êÁ†ÅÂàÜÊîØ
  # FEEDS_CONF: feeds.conf.default  #Ëá™ÂÆö‰πâfeedsÊñá‰ª∂
  # CONFIG_FILE: .config            #Ëá™ÂÆö‰πâconfigÈÖçÁΩÆ       Â§öÊú∫ÂûãÈÖçÁΩÆÊñá‰ª∂Â¶ÇÔºö(config/N1.config)
  # DIY_P1_SH: diy-part1.sh         #Ëá™ÂÆö‰πâËÑöÊú¨             Â§öÊú∫ÂûãËÑöÊú¨Êñá‰ª∂Â¶ÇÔºö(scripts/diy-part1.sh)
  # DIY_P2_SH: diy-part2.sh         #Ëá™ÂÆö‰πâËÑöÊú¨             Â§öÊú∫ÂûãËÑöÊú¨Êñá‰ª∂Â¶ÇÔºö(scripts/diy-part2.sh)
# #  ORGANIZE_FIRMWARE: false              #Êï¥ÁêÜÂõ∫‰ª∂Ê∏ÖÈô§packages
  # UPLOAD_CONFIG: true            #‚Üê‰∏ä‰º†configÈÖçÁΩÆÊñá‰ª∂
  # UPLOAD_FIRMWARE: true          #‚Üê‰∏ä‰º†Âõ∫‰ª∂Âà∞gitthubÁ©∫Èó¥ÔºàÈªòËÆ§ÂøÖÈÄâtrueÔºâ
  # UPLOAD_BIN_DIR: true           #‚Üê‰∏ä‰º†binÊñá‰ª∂Â§πÂà∞_githubÁ©∫Èó¥ÔºàÂõ∫‰ª∂+ipkÔºâ
  # UPLOAD_RELEASE: true           #‚ÜêÂèëÂ∏ÉÂõ∫‰ª∂Âà∞_/releases‰∏ªÈ°µ
  # UPLOAD_COWTRANSFER: true        #‚Üê‰∏ä‰º†Âà∞_Â•∂ÁâõÂø´‰º†
  # UPLOAD_WETRANSFER: true         #‚Üê‰∏ä‰º†Âà∞_WeTransfer
  # EXTRACT_LINKS: true            #ÊèêÂèñÂ•∂ÁâõÂø´‰º†ÂíåWeTransferÈìæÊé•
  # TZ: Asia/Shanghai               #‚ÜêÊó∂Âå∫ËÆæÁΩÆ
  
  # REPO_TOKEN: ${{ secrets.REPO_TOKEN }}  # GitHub‰ª§ÁâåÂêçÁß∞ÔºàÁî®‰∫éÂèëÂ∏ÉÂõ∫‰ª∂Ôºâ
  # SCKEY: ${{ secrets.SCKEY }}            # GitHub‰ª§ÁâåÂØÜÈí•
#-----------------------------------------------------------------------------------------------------------------
  GITHUB_RELEASE: https://github.com/zuoweiid/13.1/releases         #GitHubÂèëÂ∏ÉÂú∞ÂùÄÔºå‰øÆÊîπÊàêËá™Â∑±ÁöÑ
  TZ: Asia/Shanghai                      #‚ÜêÊó∂Âå∫ËÆæÁΩÆ
  
  REPO_TOKEN: ${{ secrets.REPO_TOKEN }}  # GitHub‰ª§ÁâåÂêçÁß∞ÔºàÁî®‰∫éÂèëÂ∏ÉÂõ∫‰ª∂Ôºâ
  SCKEY: ${{ secrets.SCKEY }}            # GitHub‰ª§ÁâåÂØÜÈí•
  TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}      # TGÁîµÊä•Áæ§‰ª§Áâå
  TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}  # TGÁîµÊä•Áæ§ÂØÜÈí•


#-----------------------------------------------------------------------------------------------------------------
jobs:
  build:
    runs-on: Ubuntu-18.04   #‚ÜêÁºñËØëÁ≥ªÁªüÁâàÊú¨
    if: github.event.repository.owner.id == github.event.sender.id  #Âè™Êúâ‰ªìÂ∫ìÊâÄÊúâËÄÖÊâçËÉΩÁÇπ StarÂêØÂä®
#-----------------------------------------------------------------------------------------------------------------
# Â§öÊú∫Âûã_Â¢ûÂä†ÈÄâÈ°π
    name: ÁºñËØë ${{matrix.target}}
    strategy:
      fail-fast: false
      matrix:
        target: [lede_N1]   #‚ÜêÁõÆÊ†áÊåáÂÆöÊú∫ÂûãÊñá‰ª∂Â§πÔºåÂèØ‰ª•Â§öÈÄâÁî®Ëã±ÊñáÈÄóÂè∑ÈöîÂºÄ
        # lede_X86,lede_G-DOCK,lede_N1
#-----------------------------------------------------------------------------------------------------------------
    steps:
    - name: ÂáÜÂ§áÁéØÂ¢É #Checkout
      uses: actions/checkout@v2

#-----------------------------------------------------------------------------------------------------------------
# ÂçïÊú∫Âûã_ÈÖçÁΩÆËÑöÊú¨ ‚Äúsettings.ini‚Äù
#REPO_URL="https://github.com/project-openwrt/openwrt"     #ÁºñËØëÂõ∫‰ª∂Ê∫êÁ†ÅÈìæÊé•ÔºàËØ∑Âãø‰øÆÊîπÔºâ
#REPO_BRANCH="openwrt-18.06"         #Ê∫êÁ†ÅÈìæÊé•ÁöÑÂàÜÊîØÔºàËØ∑Âãø‰øÆÊîπÔºâ
#CONFIG_FILE=".config"               #ÈÖçÁΩÆÊñá‰ª∂ÔºàÂèØSSHËøúÁ®ãÂÆöÂà∂Âõ∫‰ª∂Êèí‰ª∂Ôºå‰πüÂèØÂú®Êú¨Âú∞ÊèêÂèñÈÖçÁΩÆÁ≤òË¥¥Âà∞Ê≠§Êñá‰ª∂Ôºâ
#WXFB_MESSAGE="project_x86_64"       #ÂæÆ‰ø°ÈÄöÁü•Ë∑üÂèëÂ∏ÉË¶ÅÁî®Âà∞ÁöÑÂêçÂ≠ó,ÊØîÂ¶ÇÈÄöÁü•‰Ω†XXÂºÄÂßãÁºñËØë,ÂèëÂ∏ÉÁöÑÊó∂ÂÄôÊòæÁ§∫XXÂõ∫‰ª∂
#DIY_P1_SH="diy-1.sh"                #Ëá™ÂÆö‰πâÊñá‰ª∂1
#DIY_P2_SH="diy-2.sh"                #Ëá™ÂÆö‰πâÊñá‰ª∂2
#SSH_ACTIONS="false"                 #SSHËøúÁ®ãÈÖçÁΩÆÂõ∫‰ª∂Ôºàtrue=ÂºÄÂêØÔºâÔºàfalse=ÂÖ≥Èó≠Ôºâ
#UPLOAD_BIN_DIR="false"              #‰∏ä‰º†„ÄêbinÊñá‰ª∂Â§π„ÄëÂà∞githubÁ©∫Èó¥Ôºàtrue=ÂºÄÂêØÔºâÔºàfalse=ÂÖ≥Èó≠Ôºâ
#UPLOAD_CONFIG="true"                #‰∏ä‰º†„Äê.config„ÄëÈÖçÁΩÆÊñá‰ª∂Âà∞githubÁ©∫Èó¥Ôºàtrue=ÂºÄÂêØÔºâÔºàfalse=ÂÖ≥Èó≠Ôºâ
#UPLOAD_FIRMWARE="true"              #‰∏ä‰º†Âõ∫‰ª∂Âà∞githubÁ©∫Èó¥Ôºàtrue=ÂºÄÂêØÔºâÔºàfalse=ÂÖ≥Èó≠Ôºâ
#UPLOAD_COWTRANSFER="true"           #‰∏ä‰º†Âõ∫‰ª∂Âà∞„ÄêÂ•∂ÁâõÂø´‰º†„ÄëÔºàtrue=ÂºÄÂêØÔºâÔºàfalse=ÂÖ≥Èó≠Ôºâ
#UPLOAD_WETRANSFER="true"            #‰∏ä‰º†Âõ∫‰ª∂Âà∞„ÄêWETRANSFER„ÄëÔºàtrue=ÂºÄÂêØÔºâÔºàfalse=ÂÖ≥Èó≠Ôºâ
#UPLOAD_RELEASE="false"              #ÂèëÂ∏ÉÂõ∫‰ª∂Ôºàtrue=ÂºÄÂêØÔºâÔºàfalse=ÂÖ≥Èó≠Ôºâ
#SERVERCHAN_SCKEY="false"            #ÂæÆ‰ø°ÈÄöÁü•Ôºàtrue=ÂºÄÂêØÔºâÔºàfalse=ÂÖ≥Èó≠Ôºâ

#-----------------------------------------------------------------------------------------------------------------
    - name: Âä†ËΩΩËÑöÊú¨ #ÁºñËØëÂâçÂä†ËΩΩËÑöÊú¨
      run: |
        source "${GITHUB_WORKSPACE}/build/${{matrix.target}}/settings.ini"
        echo "REPO_URL=${REPO_URL}" >> $GITHUB_ENV
        echo "REPO_BRANCH=${REPO_BRANCH}" >> $GITHUB_ENV
        echo "CONFIG_FILE=${CONFIG_FILE}" >> $GITHUB_ENV
        echo "WXFB_MESSAGE=${WXFB_MESSAGE}" >> $GITHUB_ENV
        echo "DIY_P1_SH=${DIY_P1_SH}" >> $GITHUB_ENV
        echo "DIY_P2_SH=${DIY_P2_SH}" >> $GITHUB_ENV
        echo "SSH_ACTIONS=${SSH_ACTIONS}" >> $GITHUB_ENV
        echo "UPLOAD_BIN_DIR=${UPLOAD_BIN_DIR}" >> $GITHUB_ENV
        echo "UPLOAD_CONFIG=${UPLOAD_CONFIG}" >> $GITHUB_ENV
        echo "UPLOAD_FIRMWARE=${UPLOAD_FIRMWARE}" >> $GITHUB_ENV
        echo "UPLOAD_COWTRANSFER=${UPLOAD_COWTRANSFER}" >> $GITHUB_ENV
        echo "UPLOAD_WETRANSFER=${UPLOAD_WETRANSFER}" >> $GITHUB_ENV
        echo "UPLOAD_RELEASE=${UPLOAD_RELEASE}" >> $GITHUB_ENV
        echo "SERVERCHAN_SCKEY=${SERVERCHAN_SCKEY}" >> $GITHUB_ENV

#-----------------------------------------------------------------------------------------------------------------
    - name: ÂáÜÂ§áÁºñËØë_ÂæÆ‰ø°ÈÄöÁü•         #GithubËÆæÁΩÆÈáåÈúÄÊ∑ªÂæÆ‰ø°SCKEY
      uses: emon100/Action-Serverchan@v2
      if: env.SERVERCHAN_SCKEY == 'true' || (github.event.inputs.wxtz == 'wxtz' && github.event.inputs.wxtz  != 'false')
      with:
        SCKEY: ${{ secrets.SCKEY }}
        text: ‰∏ª‰∫∫${{ env.WXFB_MESSAGE }}ÁºñËØëÂºÄÂßãÂï¶
        desp: ‰∏ª‰∫∫ÊÇ®Ë¶ÅÁºñËØëÁöÑ[${{ env.WXFB_MESSAGE }}]Âõ∫‰ª∂Ê≠£Âú®Âä™ÂäõËÄïËÄò‰∏≠,ËØ∑ËÄêÂøÉÁ≠âÂæÖ......

#-----------------------------------------------------------------------------------------------------------------
    - name: ÂàùÂßãÂåñÁéØÂ¢É #Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update -y
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-1804)
        sudo -E apt-get -qq autoremove -y --purge
        sudo -E apt-get -qq clean -y
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

#-----------------------------------------------------------------------------------------------------------------
    - name: ‰∏ãËΩΩ${{matrix.target}}Ê∫êÁ†Å #Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
        
        # cd openwrt
        # if [ ${{matrix.target}} != openwrt ]; then
          # rm -rf package/lienol/luci-app-timecontrol
          # rm -rf package/ntlf9t/{smartdns,luci-app-smartdns}
          # rm -rf package/ctcgfw/{luci-app-argon-config,luci-theme-argonv3}
          # rm -rf package/lean/{luci-app-netdata,luci-theme-argon,k3screenctrl}
        # fi   #ÁºñËØë‚Äúopenwrt‚ÄùÁ∫ØÂáÄÊú∫ÂûãÊó∂ÔºåÂà†Èô§Ëøô4‰∏™Êñá‰ª∂Â§π
#-----------------------------------------------------------------------------------------------------------------
    - name: Âä†ËΩΩDIY_1ËÑöÊú¨ #Load custom feeds
      run: |
        if [ ${{matrix.target}} == "lede_N1" -o ${{matrix.target}} == "Project_N1" ];then
          git clone https://github.com/tuanqing/mknop reform
        fi   # N1Êú∫ÂûãÊó∂_‰∏ãËΩΩÂú®Á∫øÊâìÂåÖ‰æùËµñÔºàËá≥Ê†πÁõÆÂΩïÔºâ
        
        cp -Rf `find ./ -maxdepth 1 -type d ! -path './openwrt' ! -path './'` openwrt  # Ê∫êÁ†ÅÊñá‰ª∂Â§çÂà∂Âà∞ÂØπÂ∫îÊú∫ÂûãÁõÆÂΩï‰∏ã
        cd openwrt
        if [ -f "build/${{matrix.target}}/$DIY_P1_SH" ]; then
          chmod +x build/${{matrix.target}}/$DIY_P1_SH
          /bin/bash "build/${{matrix.target}}/$DIY_P1_SH"
        fi   # ÊâßË°åDIY_1ËÑöÊú¨
        
        git clone https://github.com/tuanqing/install-program package/install-program  #ÔºàÁºñËØëÂâçÂãæÈÄâÔºöUtilities--> install-programÔºâ
        
        git clone https://github.com/openwrt-dev/po2lmo.git   # Ê∑ªÂä†po2lmo‰æùËµñ
        pushd po2lmo
        make && sudo make install
        popd
        
#-----------------------------------------------------------------------------------------------------------------
    - name: Êõ¥Êñ∞Ê∫ê & ÂÆâË£ÖÊ∫ê #Update feeds & Install feeds
      run: cd openwrt && ./scripts/feeds clean
           cd openwrt && ./scripts/feeds update -a
           cd openwrt && ./scripts/feeds install -a

#-----------------------------------------------------------------------------------------------------------------
    - name: Âä†ËΩΩDIY_2ËÑöÊú¨ #Load custom configuration
      run: |
        cd openwrt
        if [ -f "build/${{matrix.target}}/$DIY_P2_SH" ]; then
          chmod +x build/${{matrix.target}}/$DIY_P2_SH
          /bin/bash "build/${{matrix.target}}/$DIY_P2_SH"
        fi   # ÊâßË°åDIY_2ËÑöÊú¨
        
        [ -e build/${{matrix.target}}/$CONFIG_FILE ]
        mv build/${{matrix.target}}/$CONFIG_FILE .config   # ÁßªÂä®.configÊñá‰ª∂Âà∞ÂØπÂ∫îÊú∫ÂûãÁõÆÂΩï‰∏ã
        
        if [ $REPO_URL == "https://github.com/coolsnowwolf/lede" ]; then
         echo "NAME2=Lede-" >> $GITHUB_ENV
         echo "ZUOZHE=lean" >> $GITHUB_ENV
        elif [ $REPO_URL == "https://github.com/Lienol/openwrt" ]; then
         echo "NAME2=Lienol-" >> $GITHUB_ENV
         echo "ZUOZHE=lienol" >> $GITHUB_ENV
        elif [ $REPO_URL == "https://github.com/project-openwrt/openwrt" ]; then
         echo "NAME2=Project-" >> $GITHUB_ENV
         echo "ZUOZHE=CTCGFW" >> $GITHUB_ENV
        elif [ $REPO_URL == "https://github.com/openwrt/openwrt" ]; then
         echo "NAME2=Official-" >> $GITHUB_ENV
        fi   # NAME2 = ‚Äúlede-‚Äù Ê±ÇÊ∫êÁ†Å‰ΩúËÄÖÂêçÁß∞‰ø°ÊÅØ
        
        rm -rf {LICENSE,README,README.md}
        rm -rf ./*/{LICENSE,README,README.md}
        rm -rf ./*/*/{LICENSE,README,README.md}    # Âà†Èô§Êó†Áî®ËØ¥Êòé
#-----------------------------------------------------------------------------------------------------------------
    # - name: Apply patches #patchË°•‰∏Å
      # run: |
        # cd openwrt
        # find "devices/common/patches" -type f ! -path 'devices/common/patches/china_mirrors.patch' -name '*.patch' -print0 | sort -z | xargs -I % -t -0 -n 1 sh -c "cat '%'  | patch -d './' -p1 -E --forward --no-backup-if-mismatch"
        # if [ -n "$(ls -A "devices/${{matrix.target}}/patches" 2>/dev/null)" ]; then
          # find "devices/${{matrix.target}}/patches" -type f -name '*.patch' -print0 | sort -z | xargs -I % -t -0 -n 1 sh -c "cat '%'  | patch -d './' -p1 -E --forward --no-backup-if-mismatch"
        # fi
#-----------------------------------------------------------------------------------------------------------------
    - name: SSHÈìæÊé•ÔºàÂà∞Ê≠§È¢ÑËÆ°10ÂàÜÈíüÔºâ #SSH connection to Actions
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

#-----------------------------------------------------------------------------------------------------------------
    - name: ‰∏ãËΩΩDLÂ∫ì #Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

#-----------------------------------------------------------------------------------------------------------------
    - name: ÂºÄÂßãÁºñËØëÂõ∫‰ª∂ #Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(($(nproc)+1)) thread compile"
        make -j$(($(nproc)+1)) || make -j1 || make -j1 V=s
        echo "::set-output name=status::success"
        
        DEVICE=$(egrep -o "CONFIG_TARGET.*DEVICE.*=y" .config | sed -r 's/.*(.*)=y/\0/')       # DEVICE = ËÆæÁΩÆÂèòÈáè.configÊñá‰ª∂
        DEVICE2=$(egrep -o "CONFIG_TARGET.*_64_Generic=y" .config | sed -r 's/.*(.*)=y/\0/')   # DEVICE2 = ËÆæÁΩÆÂèòÈáè.configÊñá‰ª∂
        
        if [ $DEVICE == "CONFIG_TARGET_x86_64_DEVICE_generic=y" ]; then   # DEVICEÂèòÈáè‰∏∫ NAME1 = ‚Äúx86-64‚Äù
         echo "NAME1=x86-64" >> $GITHUB_ENV
        elif [ $DEVICE2 == "CONFIG_TARGET_x86_64_Generic=y" ]; then       # DEVICE2ÂèòÈáè‰∏∫ NAME1 = ‚Äúx86-64‚Äù
         echo "NAME1=x86-64" >> $GITHUB_ENV
        elif [ ${{matrix.target}} == "lede_N1" -o ${{matrix.target}} == "Project_N1" ];then   # N1Êó∂ÊâßË°åÁöÑÂà§Êñ≠/ NAME1 = ‚Äún1,Vplus,Beikeyun,L1Pro,S9xxx‚Äù
         echo "NAME1=n1,Vplus,Beikeyun,L1Pro,S9xxx" >> $GITHUB_ENV
        elif [ $DEVICE != "CONFIG_TARGET_x86_64_DEVICE_generic=y" ]; then
         grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > NAME1
         [ -s NAME1 ] && echo "NAME1=$(cat NAME1)" >> $GITHUB_ENV
        fi   # NAME1 = x86-64Ôºà‰∏éDEVICE_NAMEÂèòÈáèÂØπÁ≠â=ÊèêÂèñÊòØ‚Äúgeneric‚ÄùÔºâ
        
        echo "date=$(date "+%Y.%m.%d-%H:%M")" >> $GITHUB_ENV             # date ÂèòÈáè =Êó∂Èó¥Ê†ºÂºè: 21.01.02-1030
        echo "date1=$(date "+%YÂπ¥%mÊúà%dÂè∑-%HÁÇπ%MÂàÜ")" >> $GITHUB_ENV   # date1 ÂèòÈáè =Êó∂Èó¥Ê†ºÂºè: 2021Âπ¥01Êúà02Âè∑-10ÁÇπ50ÂàÜ ÔºàReleases‰∏ªÈ°µÊòæÁ§∫Ôºâ
        echo "date2=$(date +"%Y.%m.%d-%H:%M")" >> $GITHUB_ENV              # date2 ÂèòÈáè =Êó∂Èó¥Ê†ºÂºèÔºö202101021057   Ôºà‰∏éFILE_DATEÂØπÁ≠âÔºâTags

#-----------------------------------------------------------------------------------------------------------------
    - name: Ê£ÄÊü•Á©∫Èó¥‰ΩøÁî®ÊÉÖÂÜµ #Check space usage
      if: (!cancelled())
      run: df -hT
#-----------------------------------------------------------------------------------------------------------------
    - name: ‰∏ä‰º†binÁõÆÂΩï(Âõ∫‰ª∂+ipk) #Upload bin directory
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt-bin-${{ env.NAME2 }}${{ env.NAME1 }}_${{ env.date }}
        path: openwrt/bin

#--------------------------------------------
# N1Âú®Á∫øÂºÄÂßãÊâìÂåÖÊ≠•È™§Ê∑ªÂä†Âà∞ËøôÈáå
#--------------------------------------------
    - name: ÁºñËØëN1Êú∫ÂûãÊó∂,ÊâìÂåÖÔºàN1„ÄÅÂæÆÂä†‰∫ë„ÄÅË¥ùÂ£≥‰∫ë„ÄÅÊàëÂÆ∂‰∫ë„ÄÅS9xxxÔºâÂõ∫‰ª∂
      run: |
        if [ ${{matrix.target}} == "lede_N1" -o ${{matrix.target}} == "Project_N1" ];then
         cp openwrt/bin/targets/armvirt/*/*.tar.gz reform/openwrt   # Â§çÂà∂N1Âõ∫‰ª∂Âà∞ÊâìÂåÖÁõÆÂΩï‰∏ã
        
         cd reform
         sudo ./gen_openwrt -d -k latest   # ÊâßË°åÊâìÂåÖËÑöÊú¨
         
         devices=("phicomm-n1" "rk3328" "s9xxx" "vplus")
         cd out
         for x in ${devices[*]}; do
           cd $x
           filename=$(ls | awk -F '.img' '{print $1}')
           gzip *.img
           cd ../
           echo "firmware_$x=$filename" >> $GITHUB_ENV
         done
           cd ../../
           mv -f reform/out/*/*.img.gz openwrt/bin/targets/armvirt/*   # ÁßªÂä®Âõ∫‰ª∂Âà∞ÈªòËÆ§binÁõÆÂΩï‰∏ã
        fi
#-----------------------------------------------------------------------------------------------------------------
    - name: Êï¥ÁêÜÊñá‰ª∂ #Organize filesÔºàÈªòËÆ§Âè™Âà†Èô§packagesÔºâ
      id: organizer  # ÂÆπÊòìÂá∫ÈîôÂíå‰∏ãÈù¢ÁöÑÂ≠óÊØçË¶Å‰∏ÄËá¥
#      if: env.ORGANIZE_FIRMWARE == 'true' && !cancelled()
      run: |
        mkdir config   # ÂàõÂª∫configÊñá‰ª∂Â§π
        find openwrt/bin/targets/ -name "*config.buildinfo*" | xargs -i mv -f {} config   # ÂØªÊâæ‚Äúconfig.buildinfo‚ÄùÊñá‰ª∂ÁßªÂä®Âπ∂ÊîπÂêç‰∏∫"config"
        
        if [ -n "$(ls -A "openwrt/bin/targets/x86" 2>/dev/null)" ]; then
         find openwrt/bin/targets/x86/* -name "*kernel*" | xargs -i mv -f {} openwrt/bin/targets
        fi
        cd openwrt/bin/targets/*/*   # ÂàáÊç¢Âà∞Âõ∫‰ª∂ÁõÆÂΩï‰∏ã
        rm -rf packages && mkdir packages   # Âà†Èô§‚Äúpackages‚ÄùÊñá‰ª∂Â§πÔºåÈáçÊñ∞ÂàõÂª∫‚Äúpackages‚ÄùÊñá‰ª∂Â§π
        find -name "*buildinfo*" | xargs -i mv -f {} packages
        find -name "*sha256sums*" | xargs -i mv -f {} packages
        find -name "*manifest*" | xargs -i mv -f {} packages
        find -name "*vmlinuz*" | xargs -i mv -f {} packages
        find -name "*Image*" | xargs -i mv -f {} packages
        rm -rf packages   # Âà†Èô§‚Äúpackages‚ÄùÊñá‰ª∂Â§π
        
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV   # FIRMWARE = ËÆæÁΩÆÂèòÈáè
        echo "::set-output name=status::success"   # ÂàóÂá∫Êñá‰ª∂Â§πÂÜÖ ÊâÄÊúâÂêçÁß∞
#-----------------------------------------------------------------------------------------------------------------
    - name: ‰∏ä‰º†.configÈÖçÁΩÆÊñá‰ª∂  #Âà∞githubÁ©∫Èó¥
      uses: actions/upload-artifact@v2    # ‰øÆÊîπÂâçÔºö@v2   Â§áÁî®Ôºö@main
      if: steps.organizer.outputs.status == 'success' && env.UPLOAD_CONFIG == 'true' && !cancelled()
      with:
        name: .config_${{ env.NAME2 }}${{ env.NAME1 }}_${{ env.date }}
        path: ./config

#-----------------------------------------------------------------------------------------------------------------
    - name: ‰∏ä‰º†Âõ∫‰ª∂Âà∞githubÁ©∫Èó¥ #Upload firmware directory
      uses: actions/upload-artifact@v2
      if: steps.organizer.outputs.status == 'success' && env.UPLOAD_FIRMWARE == 'true'
      with:
        name: OpenWrt_${{ env.NAME2 }}${{ env.NAME1 }}_firmware_${{ env.date }}
        path: ${{ env.FIRMWARE }}

#-----------------------------------------------------------------------------------------------------------------
    - name: ‰∏ä‰º†Âõ∫‰ª∂Âà∞Â•∂ÁâõÂø´‰º† #Upload firmware to cowtransfer
      id: cowtransfer
      if: steps.organizer.outputs.status == 'success' && env.UPLOAD_COWTRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress ${FIRMWARE} 2>&1 | tee cowtransfer.log
        echo "::warning file=Â•∂ÁâõÂø´‰º†Ôºà${{matrix.target}}Ôºâ::$(cat cowtransfer.log | grep https)"
        echo "::set-output name=url::$(cat cowtransfer.log | grep https | cut -f3 -d" ")"

#-----------------------------------------------------------------------------------------------------------------
    - name: ‰∏ä‰º†Âõ∫‰ª∂Âà∞WeTransfer #Upload firmware to WeTransfer
      id: wetransfer
      if: steps.organizer.outputs.status == 'success' && env.UPLOAD_WETRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress ${FIRMWARE} 2>&1 | tee wetransfer.log
        echo "::warning file=WeTransferÈìæÊé•Ôºà${{matrix.target}}Ôºâ::$(cat wetransfer.log | grep https)"
        echo "::set-output name=url::$(cat wetransfer.log | grep https | cut -f3 -d" ")"

#-----------------------------------------------------------------------------------------------------------------
    - name: ÊèêÂèñ„ÄåÂ•∂ÁâõÂø´‰º†„Äç&„ÄåWeTransfer„Äç‰∏ãËΩΩÈìæÊé• #Ëá™Âä®ÊèêÂèñÈìæÊé•
      if: steps.organizer.outputs.status == 'success' && env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress ${FIRMWARE} 2>&1 | tee cowtransfer.log
        
        echo "COWTRANSFER_URL=$(cat cowtransfer.log | grep https | cut -f3 -d" ")" >> $GITHUB_ENV
        
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress ${FIRMWARE} 2>&1 | tee wetransfer.log
        
        echo "WETRANSFER_URL=$(cat wetransfer.log | grep https | cut -f3 -d" ")" >> $GITHUB_ENV

#--------------------------------------------
#    - name: ÁîüÊàêÂèëÂ∏ÉÊ†áÁ≠æ #Generate release tag
#      id: tag
#      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
#      run: |
#        echo "::set-output name=release_tag::$(date +"%Y.%m.%d-%H%M")"
#        touch release.txt
#        [ $UPLOAD_COWTRANSFER = true ] && echo "üîó [Cowtransfer](${{ steps.cowtransfer.outputs.url }})" >> release.txt
#        [ $UPLOAD_WETRANSFER = true ] && echo "üîó [WeTransfer](${{ steps.wetransfer.outputs.url }})" >> release.txt
#        echo "::set-output name=status::success"
#--------------------------------------------

#-----------------------------------------------------------------------------------------------------------------
    - name: ‰∏ä‰º†Âπ∂ÂèëÂ∏ÉÂõ∫‰ª∂ # Ëá™Âä®ÂèëÂ∏ÉÂõ∫‰ª∂ releases‰∏ªÈ°µ‰∏ãËΩΩ
      uses: softprops/action-gh-release@v1
      if: steps.organizer.outputs.status == 'success' && env.UPLOAD_RELEASE == 'true' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
      with:
        name: ${{ env.date1 }} „Äå ${{ env.WXFB_MESSAGE }} „ÄçÂõ∫‰ª∂
        tag_name: ${{ env.date2 }}
        body: |            
            ‚òÜ  Ê∫êÁ†Å : ${{ env.REPO_URL }}
            ‚òÜ  ÂàÜÊîØ : ${{ env.REPO_BRANCH }}
            ‚òÜ  ÊÑüË∞¢Ê∫êÁ†Å‰ΩúËÄÖ[ ${{ env.ZUOZHE }}Â§ßÁ•û ]Êó†ÁßÅÂàÜ‰∫´ÔºÅ
            
            üéâ [ ${{ env.WXFB_MESSAGE }} ]Âõ∫‰ª∂‰∏ãËΩΩ ‚ú®
            -
            üíê Â•∂ÁâõÂø´‰º†(ÂõΩÂÜÖÈ´òÈÄüüöÄ‰∏ãËΩΩ)Ôºö ${{ env.COWTRANSFER_URL }}
            
            ‚õÑ WeTransfer(ÂõΩÂ§ñÈ´òÈÄüüöÄ‰∏ãËΩΩ)Ôºö ${{ env.WETRANSFER_URL }}
            
            üå¥ ÈìæÊé•ÊúâÊïàÊúü‰∏∫7Â§©ÔºåÊó†ÈúÄÊ≥®ÂÜåÁõ¥Êé•‰∏ãËΩΩ üê§
        files: ${{ env.FIRMWARE }}/*

#-----------------------------------------------------------------------------------------------------------------
    - name: Âà†Èô§Â∑•‰ΩúÊµÅËøêË°å #Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 10           # ‰øùÁïôÂ§©Êï∞ÔºàÈªòËÆ§ÊòØ1Ôºâ
        keep_minimum_runs: 10    # ‰øùÂ≠òÊúÄÂ∞ëËøêË°åÊï∞ÔºàÈªòËÆ§ÊòØ3Ôºâ

#-----------------------------------------------------------------------------------------------------------------
    - name: Âà†Èô§ÊóßÁâàÊú¨ #Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 10           # ‰øùÁïôÊúÄÂ∞ëÊï∞ÔºàÈªòËÆ§ÊòØ3Ôºâ
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}

#-----------------------------------------------------------------------------------------------------------------
    - name: ÁªìÊùüÁºñËØë_ÂæÆ‰ø°ÈÄöÁü•
      uses: emon100/Action-Serverchan@v2
      if: steps.organizer.outputs.status == 'success' && env.SERVERCHAN_SCKEY == 'true' || (github.event.inputs.wxtz == 'wxtz' && github.event.inputs.wxtz  != 'false')
      with:
        SCKEY: ${{ secrets.SCKEY }}
        text: ÊÅ≠Âñú‰∏ª‰∫∫${{ env.WXFB_MESSAGE }}Âõ∫‰ª∂ÁºñËØëÊàêÂäüÔºÅ
        desp: Êàë‰∫≤Áà±ÁöÑ‰∏ª‰∫∫ÊÇ®Ë¶ÅÁºñËØëÁöÑ[ ${{ env.WXFB_MESSAGE }} ]Âõ∫‰ª∂È°∫Âà©ÁºñËØëÂÆåÊàê‰∫ÜÔºÅ
        
        
              ÂÆåÊàêÊó∂Èó¥Ôºö${{ env.date1 }}
              
              
              ÂèëÂ∏ÉÂú∞ÂùÄÔºö${{ env.GITHUB_RELEASE }}
              
              
              Â•∂ÁâõÂø´‰º†Ôºö${{ env.COWTRANSFER_URL }}
              
              
              WeTransferÔºö${{ env.WETRANSFER_URL }}
      
      
              Á•ùÂ∞è‰∏ª‰∫∫ËßÅ‰∫∫Áà±ÔºåËä±ËßÅËä±ÂºÄÔºåËΩ¶ËßÅËΩ¶ËΩΩÔºåÂ§©Â§©Â•ΩÂøÉÊÉÖüéàÔºÅÔºÅÔºÅ
#--------------------------------------------
